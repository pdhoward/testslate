"use client"
import { createContext, useContext, useMemo, useState, FunctionComponent } from 'react';
import { Editor, createEditor, Descendant } from 'slate';
import { withReact } from 'slate-react';
import { withHistory } from 'slate-history';

const initialValue: Descendant[] = [
    {
      type: 'paragraph',
      children: [
        { text: 'Altitude80 AI Editor handles ' },
        { text: 'rich', bold: true },
        { text: ' text, images, audio, video, code and composite documents so ' },
        { text: 'much', italic: true },
        { text: ' better than our ' },
        { text: 'competitors', code: true },
        { text: '!' },
      ],
    },
    {
      type: 'paragraph',
      children: [
        {
          text: "With this, you can version control the docs generated by your AI Agent, ",
        },
        { text: 'or your staff', bold: true },
        {
          text: ', and trace updates, travel back in time and link relevant docs, insights and actions:',
        },
      ],
    },
    {
      type: 'block-quote',
      children: [{ text: 'Use Altitude80 AI Editor for your content and knowledge management requirements .' }],
    },
    {
      type: 'paragraph',
      align: 'center',
      children: [{ text: 'Try it out for yourself!' }],
    },
  ]
   

const SlateContext = createContext<any>(undefined);

export const SlateProvider: FunctionComponent<{ children: React.ReactNode }> = ({ children }) => {
  const editor = useMemo(() => withHistory(withReact(createEditor())), []);
  const [value, setValue] = useState<Descendant[]>(initialValue);

  return (
    <SlateContext.Provider value={{ editor, value, setValue }}>
      {children}
    </SlateContext.Provider>
  );
};

export const useSlateContext = () => useContext(SlateContext);
